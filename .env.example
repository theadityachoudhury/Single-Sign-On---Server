NODE_ENV=development

# The port on which the server will run
PORT=5000

# Database connection string
# Replace 'your-app-name' with the actual name of your application
# Ensure MongoDB is running locally or adjust the URI to your MongoDB instance
# If you are using a cloud MongoDB service, replace the URI accordingly
# For example, if you are using MongoDB Atlas, it might look like:
# MONGO_URI=mongodb+srv://<username>:<password>@cluster.mongodb.net/your-app-name?retryWrites=true&w=majority
# Make sure to replace <username> and <password> with your actual MongoDB credentials
# If you are using a local MongoDB instance, you can use the following format:
# MONGO_URI=mongodb://localhost:27017/your-app-name
# Ensure that the database 'your-app-name' exists or MongoDB will create it automatically
# If you are using a different database, adjust the URI accordingly
MONGO_URI=mongodb://localhost:27017/your-app-name

# JWT secret key for signing tokens
# This should be a strong secret key, ideally stored in an environment variable
# Make sure to replace 'your-super-secret-jwt-key' with a strong secret key
# This key is used to sign and verify JWT tokens for authentication
# It is crucial to keep this key secret and not expose it in your codebase
# To generate a strong secret key, you can use the following command in your terminal:
# openssl rand -base64 64
JWT_SECRET=your-super-secret-jwt-key
JWT_EXPIRE=7d

# Allowed origins for CORS
# This is a comma-separated list of allowed origins for CORS requests
# You can specify multiple origins that are allowed to access your API
# For example, if your frontend is running on http://localhost:3000 and http://localhost:3001,
# you can specify them like this:
# ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001,
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001,https://yourdomain.com